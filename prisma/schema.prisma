datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Season {
    id           String        @id @default(uuid())
    year         Int
    competitions Competition[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("seasons")
}

model Competition {
    id          String       @id @default(uuid())
    name        String
    season      Season       @relation(fields: [seasonId], references: [id])
    seasonId    String
    leaderboard Leaderboard?
    fixtures    Fixture[]
    category    Category?    @relation(fields: [categoryId], references: [id])
    categoryId  String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("competitions")
}

model Category {
    id           String        @id @default(uuid())
    name         String
    competitions Competition[]
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt

    @@map("categories")
}

model Fixture {
    id            String      @id @default(uuid())
    competition   Competition @relation(fields: [competitionId], references: [id])
    competitionId String
    homeTeam      Team        @relation("HomeTeam", fields: [homeTeamId], references: [id])
    homeTeamId    String
    awayTeam      Team        @relation("AwayTeam", fields: [awayTeamId], references: [id])
    awayTeamId    String
    homeTeamScore Int
    awayTeamScore Int
    date          DateTime
    location      String
    time          String
    status        String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("fixtures")
}

model Leaderboard {
    id            String      @id @default(uuid())
    competition   Competition @relation(fields: [competitionId], references: [id])
    competitionId String      @unique
    teams         TeamStats[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("leaderboards")
}

model TeamStats {
    id            String      @id @default(uuid())
    leaderboard   Leaderboard @relation(fields: [leaderboardId], references: [id])
    leaderboardId String
    team          Team        @relation(fields: [teamId], references: [id])
    teamId        String
    wins          Int
    losses        Int
    draws         Int
    goalsFor      Int
    goalsAgainst  Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("teamstats")
}

model Team {
    id           String      @id @default(uuid())
    name         String
    country      String
    logo         String
    HomeFixtures Fixture[]   @relation("HomeTeam")
    AwayFixtures Fixture[]   @relation("AwayTeam")
    TeamStats    TeamStats[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("teams")
}
